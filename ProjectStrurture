// =============================================
// FOOD ORDERING WEBSITE - COMPLETE PROJECT
// ASP.NET MVC với Identity, Repository Pattern, Services
// =============================================

// =============================================
// PHẦN 1: CẤU TRÚC DỰ ÁN
// =============================================


// =============================================
// WebBanHang.Models/ApplicationUser.cs
// =============================================
using Microsoft.AspNet.Identity.EntityFramework;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Security.Claims;
using System.Threading.Tasks;
using Microsoft.AspNet.Identity;

namespace WebBanHang.Models
{
    public class ApplicationUser : IdentityUser
    {
        [StringLength(100)]
        [Display(Name = "Họ và Tên")]
        public string FullName { get; set; }

        [StringLength(255)]
        [Display(Name = "Địa Chỉ")]
        public string Address { get; set; }

        [Display(Name = "Kích Hoạt")]
        public bool IsActive { get; set; } = true;

        [Display(Name = "Ngày Tạo")]
        public DateTime CreatedAt { get; set; } = DateTime.Now;

        [Display(Name = "Ngày Cập Nhật")]
        public DateTime UpdatedAt { get; set; } = DateTime.Now;

        // Navigation Properties
        public virtual Cart Cart { get; set; }
        public virtual ICollection<Order> Orders { get; set; }
        public virtual ICollection<Review> Reviews { get; set; }
        public virtual ICollection<ActivityLog> ActivityLogs { get; set; }

        public async Task<ClaimsIdentity> GenerateUserIdentityAsync(UserManager<ApplicationUser> manager)
        {
            var userIdentity = await manager.CreateIdentityAsync(this, DefaultAuthenticationTypes.ApplicationCookie);
            return userIdentity;
        }
    }
}

// =============================================
// WebBanHang.Models/Category.cs
// =============================================
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("Categories")]
    public class Category
    {
        [Key]
        public int CategoryId { get; set; }

        [Required(ErrorMessage = "Tên danh mục không được để trống")]
        [StringLength(100)]
        [Display(Name = "Tên Danh Mục")]
        public string CategoryName { get; set; }

        [StringLength(255)]
        [Display(Name = "Mô Tả")]
        public string Description { get; set; }

        [StringLength(255)]
        [Display(Name = "Hình Ảnh")]
        public string ImageUrl { get; set; }

        [Display(Name = "Kích Hoạt")]
        public bool IsActive { get; set; } = true;

        [Display(Name = "Ngày Tạo")]
        public DateTime CreatedAt { get; set; } = DateTime.Now;

        // Navigation Properties
        public virtual ICollection<Food> Foods { get; set; }
    }
}

// =============================================
// WebBanHang.Models/Food.cs
// =============================================
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("Foods")]
    public class Food
    {
        [Key]
        public int FoodId { get; set; }

        [Required(ErrorMessage = "Tên món ăn không được để trống")]
        [StringLength(150)]
        [Display(Name = "Tên Món Ăn")]
        public string FoodName { get; set; }

        [StringLength(500)]
        [Display(Name = "Mô Tả")]
        [DataType(DataType.MultilineText)]
        public string Description { get; set; }

        [Required(ErrorMessage = "Giá không được để trống")]
        [Column(TypeName = "decimal(18,2)")]
        [Range(0, double.MaxValue, ErrorMessage = "Giá phải lớn hơn 0")]
        [Display(Name = "Giá")]
        [DisplayFormat(DataFormatString = "{0:N0} VNĐ")]
        public decimal Price { get; set; }

        [StringLength(255)]
        [Display(Name = "Hình Ảnh")]
        public string ImageUrl { get; set; }

        [Required]
        [Display(Name = "Danh Mục")]
        public int CategoryId { get; set; }

        [Display(Name = "Còn Hàng")]
        public bool IsAvailable { get; set; } = true;

        [Column(TypeName = "decimal(3,2)")]
        [Range(0, 5)]
        [Display(Name = "Đánh Giá")]
        public decimal Rating { get; set; } = 0;

        [Display(Name = "Số Lượt Đánh Giá")]
        public int TotalReviews { get; set; } = 0;

        [Display(Name = "Ngày Tạo")]
        public DateTime CreatedAt { get; set; } = DateTime.Now;

        [Display(Name = "Ngày Cập Nhật")]
        public DateTime UpdatedAt { get; set; } = DateTime.Now;

        // Navigation Properties
        [ForeignKey("CategoryId")]
        public virtual Category Category { get; set; }
        public virtual ICollection<CartItem> CartItems { get; set; }
        public virtual ICollection<OrderDetail> OrderDetails { get; set; }
        public virtual ICollection<Review> Reviews { get; set; }
    }
}

// =============================================
// WebBanHang.Models/Cart.cs
// =============================================
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("Carts")]
    public class Cart
    {
        [Key]
        public int CartId { get; set; }

        [Required]
        public string UserId { get; set; }

        public DateTime CreatedAt { get; set; } = DateTime.Now;
        public DateTime UpdatedAt { get; set; } = DateTime.Now;

        // Navigation Properties
        [ForeignKey("UserId")]
        public virtual ApplicationUser User { get; set; }
        public virtual ICollection<CartItem> CartItems { get; set; }

        // Computed Property
        [NotMapped]
        public decimal TotalAmount
        {
            get
            {
                decimal total = 0;
                if (CartItems != null)
                {
                    foreach (var item in CartItems)
                    {
                        total += item.Subtotal;
                    }
                }
                return total;
            }
        }

        [NotMapped]
        public int TotalItems
        {
            get
            {
                return CartItems?.Count ?? 0;
            }
        }
    }
}

// =============================================
// WebBanHang.Models/CartItem.cs
// =============================================
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("CartItems")]
    public class CartItem
    {
        [Key]
        public int CartItemId { get; set; }

        [Required]
        public int CartId { get; set; }

        [Required]
        public int FoodId { get; set; }

        [Required]
        [Range(1, int.MaxValue, ErrorMessage = "Số lượng phải lớn hơn 0")]
        [Display(Name = "Số Lượng")]
        public int Quantity { get; set; }

        [Required]
        [Column(TypeName = "decimal(18,2)")]
        [Display(Name = "Giá")]
        public decimal Price { get; set; }

        [Display(Name = "Ngày Thêm")]
        public DateTime AddedAt { get; set; } = DateTime.Now;

        // Navigation Properties
        [ForeignKey("CartId")]
        public virtual Cart Cart { get; set; }

        [ForeignKey("FoodId")]
        public virtual Food Food { get; set; }

        // Computed Property
        [NotMapped]
        public decimal Subtotal => Quantity * Price;
    }
}

// =============================================
// WebBanHang.Models/Order.cs
// =============================================
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("Orders")]
    public class Order
    {
        [Key]
        public int OrderId { get; set; }

        [Required]
        [StringLength(20)]
        [Display(Name = "Mã Đơn Hàng")]
        public string OrderCode { get; set; }

        [Required]
        public string UserId { get; set; }

        [Display(Name = "Ngày Đặt")]
        public DateTime OrderDate { get; set; } = DateTime.Now;

        [Required]
        [Column(TypeName = "decimal(18,2)")]
        [Display(Name = "Tổng Tiền")]
        [DisplayFormat(DataFormatString = "{0:N0} VNĐ")]
        public decimal TotalAmount { get; set; }

        [Required]
        [StringLength(50)]
        [Display(Name = "Trạng Thái")]
        public string Status { get; set; } = "Pending";

        [StringLength(50)]
        [Display(Name = "Phương Thức Thanh Toán")]
        public string PaymentMethod { get; set; }

        [Required]
        [StringLength(255)]
        [Display(Name = "Địa Chỉ Giao Hàng")]
        public string ShippingAddress { get; set; }

        [Required]
        [StringLength(20)]
        [Display(Name = "Số Điện Thoại")]
        public string PhoneNumber { get; set; }

        [StringLength(500)]
        [Display(Name = "Ghi Chú")]
        [DataType(DataType.MultilineText)]
        public string Notes { get; set; }

        public DateTime CreatedAt { get; set; } = DateTime.Now;
        public DateTime UpdatedAt { get; set; } = DateTime.Now;

        // Navigation Properties
        [ForeignKey("UserId")]
        public virtual ApplicationUser User { get; set; }
        public virtual ICollection<OrderDetail> OrderDetails { get; set; }
        public virtual Payment Payment { get; set; }
        public virtual ICollection<Review> Reviews { get; set; }
    }
}

// =============================================
// WebBanHang.Models/OrderDetail.cs
// =============================================
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("OrderDetails")]
    public class OrderDetail
    {
        [Key]
        public int OrderDetailId { get; set; }

        [Required]
        public int OrderId { get; set; }

        [Required]
        public int FoodId { get; set; }

        [Required]
        [StringLength(150)]
        [Display(Name = "Tên Món Ăn")]
        public string FoodName { get; set; }

        [Required]
        [Range(1, int.MaxValue)]
        [Display(Name = "Số Lượng")]
        public int Quantity { get; set; }

        [Required]
        [Column(TypeName = "decimal(18,2)")]
        [Display(Name = "Giá")]
        public decimal Price { get; set; }

        // Navigation Properties
        [ForeignKey("OrderId")]
        public virtual Order Order { get; set; }

        [ForeignKey("FoodId")]
        public virtual Food Food { get; set; }

        // Computed Property
        [NotMapped]
        public decimal Subtotal => Quantity * Price;
    }
}

// =============================================
// WebBanHang.Models/Payment.cs
// =============================================
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("Payments")]
    public class Payment
    {
        [Key]
        public int PaymentId { get; set; }

        [Required]
        public int OrderId { get; set; }

        [Required]
        [StringLength(50)]
        [Display(Name = "Phương Thức")]
        public string PaymentMethod { get; set; }

        [Required]
        [Column(TypeName = "decimal(18,2)")]
        [Display(Name = "Số Tiền")]
        public decimal Amount { get; set; }

        [Required]
        [StringLength(50)]
        [Display(Name = "Trạng Thái")]
        public string Status { get; set; } = "Pending";

        [StringLength(100)]
        [Display(Name = "Mã Giao Dịch")]
        public string TransactionId { get; set; }

        [Display(Name = "Ngày Thanh Toán")]
        public DateTime? PaymentDate { get; set; }

        public DateTime CreatedAt { get; set; } = DateTime.Now;

        // Navigation Properties
        [ForeignKey("OrderId")]
        public virtual Order Order { get; set; }
    }
}

// =============================================
// WebBanHang.Models/Review.cs
// =============================================
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("Reviews")]
    public class Review
    {
        [Key]
        public int ReviewId { get; set; }

        [Required]
        public string UserId { get; set; }

        [Required]
        public int FoodId { get; set; }

        public int? OrderId { get; set; }

        [Required]
        [Range(1, 5, ErrorMessage = "Đánh giá từ 1-5 sao")]
        [Display(Name = "Đánh Giá")]
        public int Rating { get; set; }

        [StringLength(1000)]
        [Display(Name = "Nhận Xét")]
        [DataType(DataType.MultilineText)]
        public string Comment { get; set; }

        [Display(Name = "Ngày Đánh Giá")]
        public DateTime CreatedAt { get; set; } = DateTime.Now;

        // Navigation Properties
        [ForeignKey("UserId")]
        public virtual ApplicationUser User { get; set; }

        [ForeignKey("FoodId")]
        public virtual Food Food { get; set; }

        [ForeignKey("OrderId")]
        public virtual Order Order { get; set; }
    }
}

// =============================================
// WebBanHang.Models/Voucher.cs
// =============================================
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("Vouchers")]
    public class Voucher
    {
        [Key]
        public int VoucherId { get; set; }

        [Required]
        [StringLength(20)]
        [Display(Name = "Mã Voucher")]
        public string VoucherCode { get; set; }

        [StringLength(255)]
        [Display(Name = "Mô Tả")]
        public string Description { get; set; }

        [Required]
        [StringLength(20)]
        [Display(Name = "Loại Giảm Giá")]
        public string DiscountType { get; set; }

        [Required]
        [Column(TypeName = "decimal(18,2)")]
        [Display(Name = "Giá Trị Giảm")]
        public decimal DiscountValue { get; set; }

        [Column(TypeName = "decimal(18,2)")]
        [Display(Name = "Đơn Tối Thiểu")]
        public decimal MinOrderAmount { get; set; } = 0;

        [Display(Name = "Giới Hạn Sử Dụng")]
        public int UsageLimit { get; set; } = 1;

        [Display(Name = "Đã Sử Dụng")]
        public int UsedCount { get; set; } = 0;

        [Required]
        [Display(Name = "Ngày Bắt Đầu")]
        public DateTime StartDate { get; set; }

        [Required]
        [Display(Name = "Ngày Kết Thúc")]
        public DateTime EndDate { get; set; }

        [Display(Name = "Kích Hoạt")]
        public bool IsActive { get; set; } = true;

        public DateTime CreatedAt { get; set; } = DateTime.Now;
    }
}

// =============================================
// WebBanHang.Models/ActivityLog.cs
// =============================================
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebBanHang.Models
{
    [Table("ActivityLog")]
    public class ActivityLog
    {
        [Key]
        public int LogId { get; set; }

        public string UserId { get; set; }

        [Required]
        [StringLength(100)]
        public string Action { get; set; }

        [StringLength(50)]
        public string EntityType { get; set; }

        public int? EntityId { get; set; }

        [StringLength(500)]
        public string Description { get; set; }

        [StringLength(50)]
        public string IpAddress { get; set; }

        public DateTime CreatedAt { get; set; } = DateTime.Now;

        // Navigation Properties
        [ForeignKey("UserId")]
        public virtual ApplicationUser User { get; set; }
    }
}
