@using WebBanHang.Models.Models
@model Order

@{
    ViewData["Title"] = "Chi tiết đơn hàng";

    string Badge(string s) => s switch
    {
        "Pending" => "badge bg-warning text-dark",
        "Confirmed" => "badge bg-info text-dark",
        "Delivering" => "badge bg-primary",
        "Completed" => "badge bg-success",
        "Cancelled" => "badge bg-danger",
        _ => "badge bg-secondary"
    };

    var statusList = new[] { "Pending", "Confirmed", "Delivering", "Completed", "Cancelled" };
    decimal computedTotal = Model.OrderDetails?.Sum(d => d.Quantity * d.Price) ?? 0m;
}

<div class="row">
    <div class="col-12 grid-margin">
        <div class="card">
            <div class="card-body">

                <div class="d-flex align-items-center justify-content-between mb-3">
                    <h4 class="card-title">Đơn: @(Model.OrderCode ?? $"#{Model.OrderId}")</h4>
                    <div>
                        <a class="btn btn-outline-secondary"
                           asp-area="Admin" asp-controller="Orders" asp-action="Index">← Danh sách</a>
                        <a class="btn btn-outline-primary"
                           asp-area="Admin" asp-controller="Orders" asp-action="Print"
                           asp-route-orderId="@Model.OrderId" target="_blank">In đơn</a>
                    </div>
                </div>

                <div class="row g-3">
                    <!-- Thông tin đơn -->
                    <div class="col-lg-4">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="mb-2">Trạng thái: <span id="statusBadge" class="@Badge(Model.Status)">@Model.Status</span></div>
                                <div class="mb-2">Ngày đặt: @Model.OrderDate.ToString("dd/MM/yyyy HH:mm")</div>
                                <div class="mb-2">Cập nhật: @Model.UpdatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                                <div class="mb-2">Khách: @(Model.User?.FulName ?? $"{Model.User?.FirstName} {Model.User?.LastName}".Trim() ?? Model.User?.Email ?? "—")</div>
                                <div class="mb-2">SĐT: @Model.PhoneNumber</div>
                                <div class="mb-2">Địa chỉ: @Model.ShippingAddress</div>
                                <div class="mb-2">Thanh toán: @(string.IsNullOrWhiteSpace(Model.PaymentMethod) ? "—" : Model.PaymentMethod)</div>
                                @if (!string.IsNullOrWhiteSpace(Model.Notes))
                                {
                                    <div class="mb-2">Ghi chú: @Model.Notes</div>
                                }

                                <!-- POST đổi trạng thái -->
                                <form asp-area="Admin" asp-controller="Orders" asp-action="UpdateStatus"
                                      method="post" class="d-flex gap-2 mt-3">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="orderId" value="@Model.OrderId" />
                                    <select name="status" class="form-select" required>
                                        @foreach (var s in statusList)
                                        {
                                            <!-- tránh RZ1031 -->
                                            <option value="@s" selected="@(s == Model.Status ? "selected" : null)">@s</option>
                                        }
                                    </select>
                                    <button class="btn btn-primary" type="submit">Cập nhật</button>
                                </form>

                                <!-- AJAX đổi trạng thái -->
                                <div class="mt-3">
                                    <label class="form-label">Đổi trạng thái nhanh (AJAX)</label>
                                    <div class="input-group">
                                        <select id="ajaxStatus" class="form-select">
                                            @foreach (var s in statusList)
                                            {
                                                <option value="@s" selected="@(s == Model.Status ? "selected" : null)">@s</option>
                                            }
                                        </select>
                                        <button id="btnAjax" class="btn btn-outline-primary" type="button">Áp dụng</button>
                                    </div>
                                    <div id="ajaxMsg" class="small mt-2"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Chi tiết sản phẩm -->
                    <div class="col-lg-8">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-sm align-middle">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>Món/ Sản phẩm</th>
                                                <th class="text-end">SL</th>
                                                <th class="text-end">Đơn giá</th>
                                                <th class="text-end">Thành tiền</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                int i = 0;
                                            }
                                            @if (Model.OrderDetails != null)
                                            {
                                                foreach (var d in Model.OrderDetails)
                                                {
                                                    i++;
                                                    var name = string.IsNullOrWhiteSpace(d.FoodName) ? (d.Food?.FoodName ?? "—") : d.FoodName;
                                                    var sub = d.Quantity * d.Price;

                                                    <tr>
                                                        <td>@i</td>
                                                        <td>@name</td>
                                                        <td class="text-end">@d.Quantity</td>
                                                        <td class="text-end">@d.Price.ToString("N0")</td>
                                                        <td class="text-end">@sub.ToString("N0")</td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <th colspan="4" class="text-end">Tổng tạm tính</th>
                                                <th class="text-end">@computedTotal.ToString("N0")</th>
                                            </tr>
                                            <tr>
                                                <th colspan="4" class="text-end">TotalAmount (theo DB)</th>
                                                <th class="text-end">@Model.TotalAmount.ToString("N0")</th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>

                                <div class="d-flex justify-content-end gap-2">
                                    <a class="btn btn-outline-secondary"
                                       asp-area="Admin" asp-controller="Orders" asp-action="Index">Quay lại</a>
                                    <a class="btn btn-outline-primary"
                                       asp-area="Admin" asp-controller="Orders" asp-action="Print"
                                       asp-route-orderId="@Model.OrderId" target="_blank">In đơn</a>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function(){
          const btn = document.getElementById('btnAjax');
          const sel = document.getElementById('ajaxStatus');
          const msg = document.getElementById('ajaxMsg');
          const badge = document.getElementById('statusBadge');

          const badgeMap = {
            "Pending":"badge bg-warning text-dark",
            "Confirmed":"badge bg-info text-dark",
            "Delivering":"badge bg-primary",
            "Completed":"badge bg-success",
            "Cancelled":"badge bg-danger"
          };

          btn?.addEventListener('click', async () => {
            msg.textContent = "Đang cập nhật...";
            try{
              const res = await fetch('@Url.Action("UpdateStatusAjax", "Orders", new { area = "Admin" })', {
                method: 'POST',
                headers: { 'Content-Type':'application/x-www-form-urlencoded;charset=UTF-8' },
                body: new URLSearchParams({
                  orderId: '@Model.OrderId',
                  status: sel.value
                })
              });
              const data = await res.json();
              if(data.success){
                msg.textContent = data.message || "Cập nhật thành công";
                badge.className = badgeMap[sel.value] || "badge bg-secondary";
                badge.textContent = sel.value;
              } else {
                msg.textContent = data.message || "Có lỗi xảy ra";
              }
            }catch(e){
              msg.textContent = "Lỗi mạng: " + (e?.message || e);
            }
          });
        })();
    </script>
}
